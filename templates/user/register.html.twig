{% extends 'base.html.twig' %}
{% block customStylesheets %}
    <link rel="stylesheet" href="{{ asset('build/css/registerpage.css') }}" />
    {{ encore_entry_link_tags('app') }}
{% endblock %}
{% block title %}Register{% endblock %}

{% block body %}
    <div class="container">
        <div class="registerMenu">
            {{ form_start(form, {'attr':{'id' : 'app'}}) }}

                <label class="labelRegisterMenu" for="user_name">Name</label>
                {{ form_widget(form.name, {'attr': {'class': 'inputRegisterMenu', 'placeholder' : 'Your name'}}) }}
        <div class="errorStyle">{{ form_errors(form.name) }}</div>
                <label class="labelRegisterMenu" for="user_lastName">Last name</label>
                {{ form_widget(form.lastName, {'attr': {'class': 'inputRegisterMenu', 'placeholder' : 'Your last name'}}) }}
           <div class="errorStyle"> {{ form_errors(form.lastName) }}</div>
                <label class="labelRegisterMenu" for="user_email">Email</label>
                {{ form_widget(form.email, {'attr': {'class': 'inputRegisterMenu', 'placeholder' : 'Your email'}}) }}
            <div class="errorStyle">test {{ form_errors(form.email) }}</div>
                <label class="labelRegisterMenu" for="user_password_first">Password</label>
                {{ form_widget(form.password.first, {'attr': {'class': 'inputRegisterMenu', 'placeholder' : 'Password'}}) }}
            <div class="errorStyle">{{ form_errors(form.password.first) }}</div>
                <label class="labelRegisterMenu" for="user_password_second">Confirm Password</label>
                {{ form_widget(form.password.second, {'attr': {'class': 'inputRegisterMenu', 'placeholder' : 'Confirm password'}}) }}
            <div class="errorStyle">{{ form_errors(form.password.second) }}</div>
            <button type="submit" class="inputRegisterMenu inputRegisterMenuButton"  value="Create account">Create account</button>

            <input type="hidden" name="token" value="{{ csrf_token('register-user') }}"/>
            {{ form_end(form) }}
        </div>
    </div>





{% endblock %}
{% block customJs %}
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
{#    <script src="{{ asset('build/js/index.js') }}"></script>#}
{% endblock %}





{#{% extends 'base.html.twig' %}#}

{#{% block title %}Register{% endblock %}#}

{#{% block body %}#}


{#        <div class="col-md-8 order-md-1">#}
{#            <h4 class="mb-3">Register</h4>#}
{#            {{ form_start(form, {'attr':{'novalidate' : 'novalidate', 'class': 'needs-validation'}}) }}#}
{#                <div class="row">#}
{#                    <div class="col-md-6 mb-3">#}
{#                        <label for="user_name">First name</label>#}
{#                        {{ form_widget(form.name) }}#}
{#                        <div class="invalid-feedback">#}
{#                            Valid first name is required.#}
{#                            {{ form_errors(form.name) }}#}
{#                        </div>#}
{#                    </div>#}
{#                    <div class="col-md-6 mb-3">#}
{#                        <label for="user_lastName">Last name</label>#}
{#                        {{ form_widget(form.lastName) }}#}
{#                        <div class="invalid-feedback">#}
{#                            Valid last name is required.#}
{#                            {{ form_errors(form.lastName) }}#}
{#                        </div>#}
{#                    </div>#}
{#                </div>#}

{#                <div class="mb-3">#}
{#                    <label for="user_email">Email</label>#}
{#                   {{ form_widget(form.email) }}#}
{#                    <div class="invalid-feedback">#}
{#                        Please enter a valid email address for shipping updates.#}
{#                        {{ form_errors(form.email) }}#}
{#                    </div>#}
{#                </div>#}

{#                <div class="mb-3">#}
{#                    <label for="user_password_first">Password</label>#}
{#                    {{ form_widget(form.password.first) }}#}
{#                    <div class="invalid-feedback">#}
{#                        Please enter a valid password.#}
{#                        {{ form_errors(form.password.first) }}#}
{#                    </div>#}
{#                </div>#}

{#                <div class="mb-3">#}
{#                    <label for="user_password_second">Confirm Password</label>#}
{#                    {{ form_widget(form.password.second) }}#}
{#                    <div class="invalid-feedback">#}
{#                        Please enter a valid password confirmation.#}
{#                        {{ form_errors(form.password.second) }}#}
{#                    </div>#}
{#                </div>#}

{#                <hr class="mb-4">#}
{#            <button type="submit" class="btn btn-primary btn-lg btn-block">Register</button>#}
{#            {{ form_end(form) }}#}

{#        </div>#}
{#    </div>#}


{#{% endblock %}#}

{#{% block customjsblock %}#}
{#    <script>#}
{#        // Example starter JavaScript for disabling form submissions if there are invalid fields#}
{#        (function () {#}
{#            'use strict';#}

{#            window.addEventListener('load', function () {#}
{#                // Fetch all the forms we want to apply custom Bootstrap validation styles to#}
{#                var forms = document.getElementsByClassName('needs-validation');#}

{#                // Loop over them and prevent submission#}
{#                var validation = Array.prototype.filter.call(forms, function (form) {#}
{#                    form.addEventListener('click', function (event) {#}
{#                        if (form.checkValidity() === false) {#}
{#                            event.preventDefault();#}
{#                            event.stopPropagation();#}
{#                        }#}
{#                        form.classList.add('was-validated');#}
{#                    }, false);#}
{#                });#}
{#            }, false);#}
{#        })();#}


{#        let password = document.getElementById("user_password_first"),#}
{#            confirm_password = document.getElementById("user_password_second");#}

{#        function validatePassword() {#}
{#            if (password.value != confirm_password.value) {#}
{#                confirm_password.setCustomValidity("Passwords Don't Match");#}
{#            } else {#}
{#                confirm_password.setCustomValidity('');#}
{#            }#}
{#        }#}
{#        password.onchange = validatePassword;#}
{#        confirm_password.onkeyup = validatePassword;#}
{#    </script>#}

{#{% endblock %}#}
